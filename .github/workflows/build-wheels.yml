name: Build wheels

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version increment (0.1=minor, 0.01=patch)'
        required: true
        default: '0.01'
        type: choice
        options:
          - '0.1'
          - '0.01'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}
      sha: ${{ steps.commit.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump version
        id: bump
        run: |
          new_version=$(python .github/scripts/bump_version.py ${{ inputs.bump }})
          echo "version=$new_version" >> "$GITHUB_OUTPUT"
      - name: Commit version
        id: commit
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git commit -am "Bump version to ${{ steps.bump.outputs.version }}"
          git tag "v${{ steps.bump.outputs.version }}"
          git push origin HEAD --tags
          echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  build:
    name: Build wheels on ${{ matrix.os }}
    needs: prepare
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare.outputs.sha }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.16.2
      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 x86"
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair -w {dest_dir} {wheel}"
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  publish:
    runs-on: ubuntu-latest
    needs: [build, prepare]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: wheelhouse
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          name: v${{ needs.prepare.outputs.version }}
          files: wheelhouse/*.whl
